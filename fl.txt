Scaffold(appBar: AppBar(title:Center(child: Text("Appointments"),) ),
    body:Stack(children: [Container(child: FutureBuilder<List>(future: appointmentServices.getAllStudent(),builder: (context,snapshot){
      print(snapshot);
      
     if(snapshot.hasData){
       
     
    return ListView.builder(itemCount: snapshot.data?.length,itemBuilder: (context,i){
      return Card(child: ListTile(
       leading: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text('${snapshot.data![i]['duration']}''. ',), // icon
            Text("mins",style: TextStyle(fontSize: 15)), // text
          ],
        ),
      
       
        title: Text(snapshot.data![i]['customerId'],style: TextStyle(fontSize: 12.0),),
        subtitle:Text(snapshot.data![i]['locationType'],style: TextStyle(fontSize: 13.0),),
        trailing:Text(snapshot.data![i]['status'],style: TextStyle(fontSize: 15.0,color: Colors.green),)
         
      ),);
    });
     }
     
      else{
       return const Center(child:Text("No Data Found") ,);
     }
    },))
    ,
     
    ],
    
    
    
    
    ));
00000000000000000000000000000
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  static const String _title = 'Flutter Code Sample';

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      title: _title,
      home: MyStatefulWidget(),
    );
  }
}

class MyStatefulWidget extends StatefulWidget {
  const MyStatefulWidget({Key? key}) : super(key: key);

  @override
  State<MyStatefulWidget> createState() => _MyStatefulWidgetState();
}

class _MyStatefulWidgetState extends State<MyStatefulWidget> {
  int _selectedIndex = 0;
  static const TextStyle optionStyle =
      TextStyle(fontSize: 30, fontWeight: FontWeight.bold);
  static const List<Widget> _widgetOptions = <Widget>[
    Text(
      'Index 0: Home',
      style: optionStyle,
    ),
    Text(
      'Index 1: Business',
      style: optionStyle,
    ),
    Text(
      'Index 2: School',
      style: optionStyle,
    ),
  ];

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('BottomNavigationBar Sample'),
      ),
      body: Center(
        child: _widgetOptions.elementAt(_selectedIndex),
      ),
      bottomNavigationBar: BottomNavigationBar(
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.business),
            label: 'Business',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.school),
            label: 'School',
          ),
        ],
        currentIndex: _selectedIndex,
        selectedItemColor: Colors.amber[800],
        onTap: _onItemTapped,
      ),
    );
  }
}
---------


import 'package:bridal_stylish/pages/appointments/callAppointments.dart';
import 'package:bridal_stylish/pages/home_page.dart';
import 'package:flutter/material.dart';


class showAppointments extends StatefulWidget {
  const showAppointments({ Key? key }) : super(key: key);



  @override
  _showAppointmentsState createState() => _showAppointmentsState();
}

class _showAppointmentsState extends State<showAppointments> {
  Appointments appointmentServices=Appointments();
   int _selectedIndex = 0;
  static const TextStyle optionStyle =
      TextStyle(fontSize: 30, fontWeight: FontWeight.bold);
  static const List<Widget> _widgetOptions = <Widget>[
    Text(
      'Index 0: Home',
      style: optionStyle,
    ),
    Text(
      'Index 1: Business',
      style: optionStyle,
    ),
    Text(
      'Index 2: School',
      style: optionStyle,
    ),
  ];

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

 Widget build(BuildContext context) {
    return Scaffold(appBar: AppBar(title:Center(child: Text("Appointments"),) ),
    body:Stack(children: [Container(child: FutureBuilder<List>(future: appointmentServices.getAllStudent(),builder: (context,snapshot){
      print(snapshot);
      
     if(snapshot.hasData){
       
     
    return ListView.builder(itemCount: snapshot.data?.length,itemBuilder: (context,i){
      return Card(child: ListTile(
       leading: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text('${snapshot.data![i]['duration']}''. ',), // icon
            Text("mins",style: TextStyle(fontSize: 15)), // text
          ],
        ),
      
       
        title: Text(snapshot.data![i]['customerId'],style: TextStyle(fontSize: 12.0),),
        subtitle:Text(snapshot.data![i]['locationType'],style: TextStyle(fontSize: 13.0),),
        trailing:Text(snapshot.data![i]['status'],style: TextStyle(fontSize: 15.0,color: Colors.green),)
         
      ),);
    });
     }
     
      else{
       return const Center(child:Text("No Data Found") ,);
     }
    },))
    ,
     _widgetOptions.elementAt(_selectedIndex),
     
    ],
    
    
  
    
    ),
      bottomNavigationBar: BottomNavigationBar(
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.business),
            label: 'Business',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.school),
            label: 'School',
          ),
        ],
        currentIndex: _selectedIndex,
        selectedItemColor: Colors.amber[800],
        onTap: _onItemTapped,
      ),
    );
  }
}


